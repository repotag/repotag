[GENERAL]
- Add options to settings of repositories to add users for reading (watchers)
+ Add options to settings of repositories to add users for writing (contributors)
- Add User Groups
+ On the Dashboard, restrict the list of available repositories to the ones the current user has access to (currently all repos are visible).
+ Create an administration page for User Management (CRUD operations).
- Create an administration page for Resource Management.
- Think of a good way to restrict individual repositories in size (storage cap).

[REPOSITORIES]
+ Have a Settings view per repository
+ Have a Collaborator view per repository (adding, deleting, inviting)

[REPOSITORY MANAGEMENT]

[FILEBROWSER]
+ Add vertical navbar menu with options specific to one repo.
+ Save repo specific settings in a Setting object.
+ Repo needs a description/tagline.
- Add a button to show the last commit message (off by default).
- Add the possibility to view a diff of two arbitrary revisions of a file (on file level, maybe using dropdowns). 
+ Fix the File Browser not to show arbitrary files such as /etc/passwd.
+ Add a dropdown menu to the Filebrowser which available branches to browse.

[JGIT]
+ Use the JGit library to extract a file tree from a particular branch of a repository (start with "master" branch).
+ Use JGit to create new Git repositories, both on disk and in ActiveRecord (use the create controller action).

[COMMIT HOOKS]
- Add a method (using JGit?) to add commit hooks to git repositories.
- Write some basic commit hook scripts (e.g. mailer).
- Add an option to the create/edit views of repositories to add commit hooks to repositories.

[VALIDATIONS & SANITIZATION]
+ Repository name is unique for owner
- datadir config option has default characters
- remove `attr_accessible` from models, remove `attr_accessible` gem, and replace with Strong Parameters. See http://www.sitepoint.com/rails-4-quick-look-strong-parameters/

[SYNCHRONIZATION]
- Work out a way to update the 'updated-at' field of a repository in ActiveRecord each time a commit is made through the git servlet.

[AUTHENTICATION]
+ Configure the Devise gem to include OAUTH2 and OpenID authentication methods.
+ Add an administrator page to the interface in which different authentication schemes can be enabled (Google, Facebook, AD, LDAP).
- Add LDAP authorization
- Use CanCanCan?

[EMAIL]
+ Set up an email mechanism (preferably using an existing gem or Rails built-in mailers).
+ Add an admin page to the interface to configure SMTP settings for the mailer. Save these settings on disk (preferably in one central config file).
- Design an invitation mechanism with which to add users (identified by email address) to repositories and let these users know about the invitation by email.

[CONFIG]
+ Set up configuration options in database

[WIKI]
- Mount gollum as Rack application
- Have one optional wiki per repository

[BUG TRACKER]
- Implement bug tracker

[OTHER]
- Write a method that returns an Array of all repositories that haven't been updated for X amount of time.
- Write a method that merges two user accounts together in a sensible way.
- Add content to README
- Make AuthProxy rack middleware generic, and add an AuthProxy for wikis (gollum)
